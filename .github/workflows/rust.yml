on:
  pull_request:
  merge_group:
  push:
    branches:
      - main
    tags:
      - "*"

name: Continuous integration

# The check, clippy-lint, and test-stable-* jobs should typically be direct copies from
# https://github.com/googlefonts/fontations/blob/main/.github/workflows/rust.yml.
# other than the list of crates for cargo check no std

jobs:  
  check:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: rustup component add rustfmt
        run: rustup component add rustfmt

      - name: rustfmt check
        run: cargo fmt --all -- --check

      # ensure that docs are sane (links are reachable etc)
      - name: cargo doc
        run: cargo doc --all-features --document-private-items --no-deps
        env:
          RUSTDOCFLAGS: -D warnings

      - name: check no println! or eprintln! statements
        run: resources/scripts/check_no_println.sh

  clippy-lint:
    name: Clippy lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: cargo clippy --all-features
        run: cargo clippy --all-features --all-targets -- -D warnings

      - name: cargo clippy --no-default-features
        run: cargo clippy --all-targets --no-default-features -- -D warnings

# test all packages individually to ensure deterministic resolution
# of dependencies for each package

# Try to group our tests into sets of crates that take roughly equal time to run
# so we get concurrent execution on multiple runners

  test-stable-fontbe:
    name: fontbe tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: cargo test fontbe
        run: cargo test -p fontbe --all-targets --all-features

  test-stable-fontc:
    name: fontc tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: cargo test fontc
        run: cargo test -p fontc --all-targets --all-features

  test-stable-misc-quick:
    name: tests other than fontbe,fontc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: cargo test fontdrasil
        run: cargo test -p fontdrasil --all-targets --all-features

      - name: cargo test fontir
        run: cargo test -p fontir --all-targets --all-features

      - name: cargo test glyphs-reader
        run: cargo test -p glyphs-reader --all-targets --all-features

      - name: cargo test glyphs2fontir
        run: cargo test -p glyphs2fontir --all-targets --all-features

      - name: cargo test ufo2fontir
        run: cargo test -p ufo2fontir --all-targets --all-features

  check-no-std:
    name: cargo check no std
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: cargo check fontdrasil
        run: cargo check --manifest-path=fontdrasil/Cargo.toml --no-default-features

      - name: cargo check fontir
        run: cargo check --manifest-path=fontir/Cargo.toml --no-default-features

      - name: cargo check ufo2fontir
        run: cargo check --manifest-path=ufo2fontir/Cargo.toml --no-default-features

      - name: cargo check glyphs2fontir
        run: cargo check --manifest-path=glyphs2fontir/Cargo.toml --no-default-features

      - name: cargo check fontbe
        run: cargo check --manifest-path=fontbe/Cargo.toml --no-default-features

      - name: cargo check fontc
        run: cargo check --manifest-path=fontc/Cargo.toml --no-default-features

  check-ots:
    name: resources/scripts/ots_test.sh
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run resources/scripts/ots_test.sh
        run:  resources/scripts/ots_test.sh

  test-fea-rs:
    name: cargo test fea-rs
    runs-on: ubuntu-latest
    steps:
      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: actions/checkout@v3
      - uses: getsentry/action-setup-venv@v1.0.0
        id: venv
        with:
          python-version: 3.10.7
          requirement-files: resources/scripts/fea_ci_requirements.txt
      - run: pip install -r resources/scripts/fea_ci_requirements.txt
        if: steps.venv.outputs.cache-hit != 'true'


      - name: cargo test fea-rs
        run: cargo test -p fea-rs


