//! part of our codegen process
//!
//! The input is a file generated from python using glyphsLib (from
//! resources/scripts/rebuild_glyph_data.py) output is printed to stdout
//!
//! see glyphdata/README.md

use std::env;

fn main() {
    let Some(in_path) = env::args().nth(1) else {
        print_help_and_die();
    };

    let input = std::fs::read_to_string(in_path).expect("couldn't read input");
    let codegen = make_codegen(&input);

    println!(
        "// THIS FILE IS AUTOGENERATED\n\
        // see fontdrasil/glyphdata/README.md for more information"
    );
    println!(
        "static CATEGORIES: phf::Map<&'static str, GlyphInfo> = {};",
        codegen.build()
    )
}

fn make_codegen(raw_input: &str) -> phf_codegen::Map<&str> {
    let mut map = phf_codegen::Map::new();
    for line in raw_input.lines() {
        let Some((name, info)) = line.split_once(',') else {
            panic!("bad line: '{line}'");
        };
        map.entry(name.trim(), info.trim());
    }
    map
}

fn print_help_and_die() -> ! {
    eprintln!(
        "You should not execute this binary directly. It is run as part of glyph_data/rebuild.py"
    );
    std::process::exit(1)
}
